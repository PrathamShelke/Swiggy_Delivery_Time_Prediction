
1)To download any github sub directory: https://download-directory.github.io/
2)Main Project Github link: https://github.com/Himanshu-1703/swiggy-delivery-time-prediction

3)Steps to connect local folder with github
i)git init
ii)git add .
iii)git commit -m "Message"
iv)On GitHub, create a new repository (without README or .gitignore).
git remote add origin https://github.com/yourusername/your-repo-name.git
v)git branch -M main  # rename your branch to 'main' if it's not already
vi)git push -u origin main

After one time setup
i)git add .
ii)git commit -m "Describe your changes"
iii)git push -u origin main

4)How to remove any file from github if pushed
i)git rm --cached path/to/your/file
ii)echo "path/to/your/file" >> .gitignore
iii)git commit -m "Describe your changes"
iv)git push -u origin main

5)Dagshub is use for Data+model versioning,experiment tracking,etc its basically Github for ML.
DagsHub Dashboard link:https://dagshub.com/dashboard

We can connect Dagshub and enable experiment tracking through mlflow in our environment
by referring to tracking uri in remote->experiments section on dagshub dashboard.

6)MLflow provides:
i)Experiment tracking (parameters, metrics, artifacts)
ii)Model registry
iii)Local UI server to view runs
iv)Pluggable storage for tracking server and artifacts

7)Creating a Virtual environment in Python and activate it.
i)python -m venv venv
ii)source venv/bin/activate

8)Steps to setup Data Version Control through dvc
i)dvc init
ii)dvc add /data/raw/example.csv before doing this remove this .csv from git tracking .

Instead we need to stop dvc tracking use: dvc remove swiggy_dataset/eg.csv.dvc

iii)dvc dag is used to see the stage of dvc and it gets updated as we update dvc.yaml file
iv)dvc repro is used to run the particular stage we define in dvc.yaml and then we can check using dvc dag.
v)THan we can push this stage into github 

Similarly repeat this step iii),iv),v) as we keep on adding stage in the dvc.yaml file and .py files in src folder

9)cmd + / is used to add comments or remove comment from multiple lines in code.

10)The params.yaml file in DVC (Data Version Control) is used to store hyperparameters or configuration values for your machine learning (or data science) pipeline in a clean, versioned, and reusable way.

11)git log --oneline is used to see all the commits in the repro